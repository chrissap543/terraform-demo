name: apply
on:
    pull_request: 
        types: 
            - closed

jobs:
    if_merged:
      if: github.event.pull_request.merged == true
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: aws_instance/create
      steps:
      - uses: actions/checkout@v4
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Plan Output
        id: plan_output
        run: |
          terraform plan -no-color >> plan.txt
          pwd
          ls -a
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      
      - uses: actions/github-script@v6
        with: 
          github-token: ${{ secrets.COMMENT_PAT }}
          script: |
            const process = require('process')
            console.log(process.cwd())
            const fs = require('fs')
            const fileContents = fs.readFileSync('./plan.txt').toString()
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: fileContents
            })
        
      # - run: terraform apply -auto-approve
      #   env: 
      #       AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #       AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

            
                